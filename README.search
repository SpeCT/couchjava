These are the instructions for enabling search in Cloudant.  First, follow the instruction in README to enable java views.

Indexing:

To index a specific database, you need to upload a design doc.  The design doc
must have a "map" function that emits the [field, token] pairs, and a reduce
function that is the erlang builtin "_count".  The name of the design doc must be "lucene".  Here is an example design doc that indexes all fields in every document in the database:

{
    "language":"java",
    "views" : 
	{
	"index" : {"map":"{\"classname\":\"com.cloudant.javaviews.CloudantSearch\"}","reduce":"_count"}
	}    
}

The class  com.cloudant.javaviews.CloudantSearch is distributed as part of the couchdb-java-viewserver.jar file -- no need to add any jar to this design document.

You can hand select which fields to index:

{
    "language":"java",
    "views" : 
	{
	"index" : {"map":"{\"classname\":\"com.cloudant.javaviews.CloudantSearch\",\"configure\":\"user.name,text,source\"}","reduce":"_count"}
	}    
}

In this case, we only index three fields "user.name", "text", and "source".  Note that the "user.name" refers to the JSONObject named "name" within the JSONObject named "user".  If you have "." in your JSON document field names, you are hosed.

Upload your design doc using your favorite couchdb upload command.  If you saveud the above design doc as a file name "lucene.json":

curl -X PUT http://USER:PASSWORD@USER.cloudant.com/DB_NAME/_design/lucene -d@lucene.json

Hit the view with a GET command to start the indexing:

curl -X GET http://USER:PASSWORD@USER.cloudant.com:5984/DB_NAME/_design/lucene/_view/index

SEARCHING:

To search, you'll can install a java webapp in your favorite servlet container.For the instructions below, we assume you are using jetty and the installation director is in the environment variable $JETTY_HOME.

First, build the searchserver war file:

ant searchserver

This will create a file dist/searchserver.war.  Copy this file to the webapps directory:

cp dist/searchserver.war $JETTY_HOME/webapps/.

If passwords are enabled our your couchdb directory that you wish to search, you need to add the following to $JETTY_HOME/etc/webdefault.xml:

  <context-param>
  	<param-name>dbcoreuser</param-name>
  	<param-value>USERNAME</param-value>
  </context-param>
  <context-param>
  	<param-name>dbcorepassword</param-name>
  	<param-value>PASSWORD</param-value>
  </context-param>

Make sure this is visible in the web-app element of the xml document (not commented or within another element).

Now start your web server, e.g.:

$JETTY_HOME/bin/jetty.sh start

To search, you need to know the port number of the jetty server (8080 by default). If it is running on localhost, the basic search syntax is:

http://localhost:8080/searchserver/Search?q=FIELD_TO_SEARCH:YOUR_QUERY&url=http://USER.cloudant.com:5984/DB_NAME&start=0&end=20

This will return a json document with the couchids of the top 20 matching documents in the database as well as the total number of hits.  If you omit the start and end, the default to 0 and 10 (top 10 docs).
 

